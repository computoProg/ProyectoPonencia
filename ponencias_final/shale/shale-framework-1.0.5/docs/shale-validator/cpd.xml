<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="128" tokens="367">
<file line="42" path="/Users/greddin/develop/shale-1_0_x/target/checkout/shale-validator/src/main/java/org/apache/shale/validator/converter/DoubleConverter.java"/>
<file line="42" path="/Users/greddin/develop/shale-1_0_x/target/checkout/shale-validator/src/main/java/org/apache/shale/validator/converter/FloatConverter.java"/>
<file line="42" path="/Users/greddin/develop/shale-1_0_x/target/checkout/shale-validator/src/main/java/org/apache/shale/validator/converter/IntegerConverter.java"/>
<file line="42" path="/Users/greddin/develop/shale-1_0_x/target/checkout/shale-validator/src/main/java/org/apache/shale/validator/converter/LongConverter.java"/>
<file line="42" path="/Users/greddin/develop/shale-1_0_x/target/checkout/shale-validator/src/main/java/org/apache/shale/validator/converter/ShortConverter.java"/>
<codefragment>
<![CDATA[
            ShortValidator.getInstance();



    // -------------------------------------------------------------- Properties


    /**
     * <p>The <code>Locale</code> to apply to this conversion, if any.</p>
     */
    private Locale locale = null;


    /**
     * <p>Return the <code>Locale</code> to apply to this conversion, or
     * <code>null</code> to use the <code>Locale</code> for the current view.</p>
     */
    public Locale getLocale() {
        return this.locale;
    }


    /**
     * <p>Set the <code>Locale</code> to apply to this conversion, or
     * <code>null</code> to use the <code>Locale</code> for the current view.</p>
     *
     * @param locale The new Locale
     */
    public void setLocale(Locale locale) {
        this.locale = locale;
    }


    /**
     * <p>The formatting pattern to apply to this conversion, if any.</p>
     */
    private String pattern = null;


    /**
     * <p>Return the <code>java.text.NumberFormat</code> pattern to apply
     * to this conversion, or <code>null</code> for using no pattern.</p>
     */
    public String getPattern() {
        return this.pattern;
    }


    /**
     * <p>Set the <code>java.text.NumberFormat</code> pattern to apply to
     * this conversion, or <code>null</code> for using no pattern.</p>
     *
     * @param pattern The new formatting pattern
     */
    public void setPattern(String pattern) {
        this.pattern = null;
    }


    // ------------------------------------------------------- Converter Methods


    /** {@inheritDoc} */
    public Object getAsObject(FacesContext context, UIComponent component,
                              String value) {

        if ((context == null) || (component == null)) {
            throw new NullPointerException(message(context, "common.null"));
        }

        try {
            if (locale == null) {
                return INSTANCE.validate(value, pattern, context.getViewRoot().getLocale());
            } else {
                return INSTANCE.validate(value, pattern, locale);
            }
        } catch (Exception e) {
            throw new ConverterException(e);
        }

    }


    /** {@inheritDoc} */
    public String getAsString(FacesContext context, UIComponent component,
                              Object value) {

        if ((context == null) || (component == null)) {
            throw new NullPointerException(message(context, "common.null"));
        }

        try {
            if (locale == null) {
                return INSTANCE.format(value, pattern, context.getViewRoot().getLocale());
            } else {
                return INSTANCE.format(value, pattern, locale);
            }
        } catch (Exception e) {
            throw new ConverterException(e);
        }

    }



    // ----------------------------------------------------- StateHolder Methods


    /** {@inheritDoc} */
    public void restoreState(FacesContext context, Object state) {
        Object[] values = (Object[]) state;
        super.restoreState(context, values[0]);
        this.locale = (Locale) values[1];
        this.pattern = (String) values[2];
    }


    /** {@inheritDoc} */
    public Object saveState(FacesContext context) {
        Object[] values = new Object[3];
        values[0] = super.saveState(context);
        values[1] = this.locale;
        values[2] = this.pattern;
        return values;
    }


}
]]>
</codefragment>
</duplication>
</pmd-cpd>